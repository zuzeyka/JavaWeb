<%@ page contentType="text/html;charset=UTF-8" %>
<h1>Сервлетні фільтри</h1>
<p>
    Фільтри (сервлетні фільтри) - класи для мережевих задач, які
    утворюють формалізм "Middleware" - активності "проміжного рівня".
    Ця активність переду&#x0301;є роботі сервлетів і може виконуватись
    до маршрутизації, тобто для всіх запитів (на всі адреси, довільним
    методом: GET, POST, ...). Більш того, додаткові фільтри можуть
    "вбудовуватись" у вже наявний ланцюг викликів (вставлятись у
    середину, у "проміжний рівень")
</p>
<p>
    На прикладі CharsetFilter реалізуємо задачу встановлення кодування
    для request та response. Ця процедура(встановлення кодування) може бути здійснена ДО
    моменту першого читання/запису, оскільки підтримує мультибайт
    кодування.
</p>
<p>
    Чим відрізняється <b style="color:#3535a8;">UNICODE</b> від <b style="color:#3535a8;">UTF</b>?
</p>
<p>
    <b style="color:#3535a8;">UNICODE</b> - це правила гри, набір правил для побудови кодування.
</p>
<p>
    <b style="color:#3535a8;">UTF</b> - це реалізація правил <b style="color:#3535a8;">UNICODE</b>.
</p>

<ul class="collection with-header">
    <li class="collection-header"><h4>Реалізація фільтру CharsetFilter</h4></li>
    <li class="collection-item">
        1. Створюємо новий пакет filters, у ньому новий клас CharsetFilter
    </li>
    <li class="collection-item">
        2. Імплементуємо у цьому класі інтерфейс javax.servlet.Filter (!
        звернути увагу, бо типів Filter є декілька у різних пакетах)
    </li>
    <li class="collection-item">
        3. При імплементації не забуваємо, що продовження ланцюга фільтрів
        має бути реалізовано у ньмоу, якщо не продовжити, далі фільтра
        запит оброблюватись не буде. Це теж може бути використане, але
        свідомо.
    </li>
    <li class="collection-item">
        4. Реєструємо фільтр. Для цього є ті ж можливості, що й для
        сервлетів, але у фільтрів їх порядок досить часто
        грає визначальну роль. Тому реєстрація за допомогою
        анотацій - найгірший варіант. Далі див. web.xml
    </li>
    <li class="collection-item">
        5. Для передачі даних далі по ланці від фільтру використвоуємо
        атрибути <code>req.setAttribute("charsetName", charsetName);</code>
        Вилучити ці дані можна де завгодно (після фільтру), наприклад
        у JSP: charsetName = '<%=request.getAttribute("charsetName")%>'
    </li>
    <%--    <li class="collection-item"></li>--%>
</ul>
<p></p>
<p></p>